function db_secret(){var a={};return a.user="bradis",a.password="L93huY032r39832y",a}function db_secret(){var a={};return a.user="bradis",a.password="L93huY032r39832y",a}function db_secret(){var a={};return a.user="bradis",a.password="L93huY032r39832y",a}function db_secret(){var a={};return a.user="trinity",a.password="sG1^j84eL",a}myApp.controller("EfridgeController",["$scope","$rootScope","$http","$log","$cookies",function(a,b,c,d,e){a.meals=[],a.addMeal=function(){a.meals.push({food_name:a.checkModel.value1.food_name,total_calories:a.checkModel.value1.total_calories,fat_grams:a.checkModel.value1.fat_grams})},a.daily=[],a.addDaily=function(){a.daily.push({cal:a.daily.cal,fat:a.daily.fat,carb:a.daily.carb,protein:a.daily.protein}),console.log(JSON.stringify(a.daily))},a.IsHiddenForm=!0,a.ShowHideForm=function(){a.IsHiddenForm=!a.IsHiddenForm,a.IsHidden=!0,a.IsHiddenMeal=!0},a.IsHiddenMeal=!0,a.ShowHideMeal=function(){a.IsHiddenMeal=!a.IsHiddenMeal,a.IsHidden=!0,a.IsHiddenForm=!0},a.IsHidden=!0,a.ShowHide=function(){a.IsHidden=!a.IsHidden,a.IsHiddenForm=!0,a.IsHiddenMeal=!0},c.get("efridge")&&c({method:"GET",url:"http://localhost:3000/efridge"}).then(function(b){a.foodItems=b.data,a.checkModel={value1:!0,value2:!0}}),a.macros=[{name:"fat",amount:20},{name:"carb",amount:5},{name:"protein",amount:12},{name:"total",amount:19}],a.addMacro=function(){a.macros.push({name:a.newMacro.name,amount:a.newMacro.amount})}}]),myApp.controller("HomeController",["$scope","$rootScope","$http","$log","$cookies",function(a,b,c,d,e){a.IsHiddenDaily=!0,a.ShowHideDaily=function(){a.IsHiddenDaily=!a.IsHiddenDaily}}]),myApp.controller("EgymController",["$scope","$rootScope","$http","$log","$cookies",function(a,b,c,d,e){a.IsHidden=!0,a.ShowHide=function(){a.IsHidden=!a.IsHidden}}]),myApp.controller("AuthController",["$scope","$rootScope","$http","$log","$cookies",function(a,b,c,d,e){c.post("/login")&&c({method:"POST",url:"http://localhost:3000/login",data:{email:a.email,password:a.password}}).then(function(b){a.apiTest=JSON.stringify(b.data)},function(a){})}]),nano/etc/init/etools.conf,module.exports=db_secret,myApp.controller("EfridgeController",["$scope","$rootScope","$http","$log","$cookies",function(a,b,c,d,e){a.meals=[],a.addMeal=function(){a.meals.push({food_name:a.checkModel.value1.food_name,total_calories:a.checkModel.value1.total_calories,fat_grams:a.checkModel.value1.fat_grams})},a.daily=[],a.addDaily=function(){a.daily.push({cal:a.daily.cal,fat:a.daily.fat,carb:a.daily.carb,protein:a.daily.protein}),console.log(JSON.stringify(a.daily))},a.IsHiddenForm=!0,a.ShowHideForm=function(){a.IsHiddenForm=!a.IsHiddenForm,a.IsHidden=!0,a.IsHiddenMeal=!0},a.IsHiddenMeal=!0,a.ShowHideMeal=function(){a.IsHiddenMeal=!a.IsHiddenMeal,a.IsHidden=!0,a.IsHiddenForm=!0},a.IsHidden=!0,a.ShowHide=function(){a.IsHidden=!a.IsHidden,a.IsHiddenForm=!0,a.IsHiddenMeal=!0},c.get("efridge")&&c({method:"GET",url:"http://localhost:3000/efridge"}).then(function(b){a.foodItems=b.data,a.checkModel={value1:!0,value2:!0}}),a.macros=[{name:"fat",amount:20},{name:"carb",amount:5},{name:"protein",amount:12},{name:"total",amount:19}],a.addMacro=function(){a.macros.push({name:a.newMacro.name,amount:a.newMacro.amount})}}]),myApp.controller("HomeController",["$scope","$rootScope","$http","$log","$cookies",function(a,b,c,d,e){a.IsHiddenDaily=!0,a.ShowHideDaily=function(){a.IsHiddenDaily=!a.IsHiddenDaily}}]),myApp.controller("EgymController",["$scope","$rootScope","$http","$log","$cookies",function(a,b,c,d,e){a.IsHidden=!0,a.ShowHide=function(){a.IsHidden=!a.IsHidden}}]),myApp.controller("AuthController",["$scope","$rootScope","$http","$log","$cookies",function(a,b,c,d,e){c.post("/login")&&c({method:"POST",url:"http://localhost:3000/login",data:{email:a.email,password:a.password}}).then(function(b){a.apiTest=JSON.stringify(b.data)},function(a){})}]),nano/etc/init/etools.conf,module.exports=db_secret,myApp.controller("EfridgeController",["$scope","$rootScope","$http","$log","$cookies",function(a,b,c,d,e){a.meals=[],a.addMeal=function(){a.meals.push({food_name:a.checkModel.value1.food_name,total_calories:a.checkModel.value1.total_calories,fat_grams:a.checkModel.value1.fat_grams})},a.daily=[],a.addDaily=function(){a.daily.push({cal:a.daily.cal,fat:a.daily.fat,carb:a.daily.carb,protein:a.daily.protein}),console.log(JSON.stringify(a.daily))},a.IsHiddenForm=!0,a.ShowHideForm=function(){a.IsHiddenForm=!a.IsHiddenForm,a.IsHidden=!0,a.IsHiddenMeal=!0},a.IsHiddenMeal=!0,a.ShowHideMeal=function(){a.IsHiddenMeal=!a.IsHiddenMeal,a.IsHidden=!0,a.IsHiddenForm=!0},a.IsHidden=!0,a.ShowHide=function(){a.IsHidden=!a.IsHidden,a.IsHiddenForm=!0,a.IsHiddenMeal=!0},c.get("efridge")&&c({method:"GET",url:"http://localhost:3000/efridge"}).then(function(b){a.foodItems=b.data,a.checkModel={value1:!0,value2:!0}}),a.macros=[{name:"fat",amount:20},{name:"carb",amount:5},{name:"protein",amount:12},{name:"total",amount:19}],a.addMacro=function(){a.macros.push({name:a.newMacro.name,amount:a.newMacro.amount})}}]),myApp.controller("HomeController",["$scope","$rootScope","$http","$log","$cookies",function(a,b,c,d,e){a.IsHiddenDaily=!0,a.ShowHideDaily=function(){a.IsHiddenDaily=!a.IsHiddenDaily}}]),myApp.controller("EgymController",["$scope","$rootScope","$http","$log","$cookies",function(a,b,c,d,e){a.IsHidden=!0,a.ShowHide=function(){a.IsHidden=!a.IsHidden}}]),myApp.controller("AuthController",["$scope","$rootScope","$http","$log","$cookies",function(a,b,c,d,e){c.post("/login")&&c({method:"POST",url:"http://localhost:3000/login",data:{email:a.email,password:a.password}}).then(function(b){a.apiTest=JSON.stringify(b.data)},function(a){})}]),nano/etc/init/etools.conf,module.exports=db_secret,myApp.controller("EfridgeController",["$scope","$rootScope","$http","$log","$cookies",function(a,b,c,d,e){a.meals=[],a.addMeal=function(){a.meals.push({food_name:a.checkModel.value1.food_name,total_calories:a.checkModel.value1.total_calories,fat_grams:a.checkModel.value1.fat_grams})},a.daily=[],a.addDaily=function(){a.daily.push({cal:a.daily.cal,fat:a.daily.fat,carb:a.daily.carb,protein:a.daily.protein}),console.log(JSON.stringify(a.daily))},a.IsHiddenForm=!0,a.ShowHideForm=function(){a.IsHiddenForm=!a.IsHiddenForm,a.IsHidden=!0,a.IsHiddenMeal=!0},a.IsHiddenMeal=!0,a.ShowHideMeal=function(){a.IsHiddenMeal=!a.IsHiddenMeal,a.IsHidden=!0,a.IsHiddenForm=!0},a.IsHidden=!0,a.ShowHide=function(){a.IsHidden=!a.IsHidden,a.IsHiddenForm=!0,a.IsHiddenMeal=!0},c.get("efridge")&&c({method:"GET",url:"http://localhost:3000/efridge"}).then(function(b){a.foodItems=b.data,a.checkModel={value1:!0,value2:!0}}),a.macros=[{name:"fat",amount:20},{name:"carb",amount:5},{name:"protein",amount:12},{name:"total",amount:19}],a.addMacro=function(){a.macros.push({name:a.newMacro.name,amount:a.newMacro.amount})}}]),myApp.controller("HomeController",["$scope","$rootScope","$http","$log","$cookies",function(a,b,c,d,e){a.IsHiddenDaily=!0,a.ShowHideDaily=function(){a.IsHiddenDaily=!a.IsHiddenDaily}}]),myApp.controller("EgymController",["$scope","$rootScope","$http","$log","$cookies",function(a,b,c,d,e){a.IsHidden=!0,a.ShowHide=function(){a.IsHidden=!a.IsHidden}}]),myApp.controller("AuthController",["$scope","$rootScope","$http","$log","$cookies",function(a,b,c,d,e){c.post("/login")&&c({method:"POST",url:"http://localhost:3000/login",data:{email:a.email,password:a.password}}).then(function(b){a.apiTest=JSON.stringify(b.data)},function(a){})}]),module.exports=db_secret;var mysql=require("mysql"),db_secret=require("./db_secret.js"),db=new db_secret,pool=mysql.createPool({connectionLimit:100,host:"localhost",user:db.user,password:db.password,database:"freetools"});module.exports=pool;var myApp=angular.module("myApp",["ui.router","ui.bootstrap","ngCookies"]);myApp.config(["$urlRouterProvider","$stateProvider","$locationProvider","$httpProvider",function(a,b,c,d){d.defaults.withCredentials=!0,b.state("home",{url:"/",views:{nav:{templateUrl:"templates/partials/nav.html",controller:"AuthController"},btnpanel:{templateUrl:"templates/partials/daily.html",controller:"HomeController"}}}).state("login",{url:"/login",views:{nav:{templateUrl:"templates/view2.html",controller:"AuthController"},btnpanel:{templateUrl:"templates/view1.html"},form:{templateUrl:"templates/partials/register.html",controller:"EgymController"}}}).state("egym",{url:"/egym",views:{nav:{templateUrl:"templates/partials/nav.html",controller:"AuthController"},btnpanel:{templateUrl:"templates/partials/btnGym.html",controller:"HomeController"},form:{templateUrl:"templates/partials/exercise.html",controller:"EgymController"}}}).state("efridge",{url:"/efridge",views:{nav:{templateUrl:"templates/partials/nav.html",controller:"AuthController"},btnpanel:{templateUrl:"templates/partials/btnFridge.html",controller:"HomeController"},form:{templateUrl:"templates/partials/foodtable.html",controller:"EfridgeController"}}}).state("account",{url:"/account",views:{nav:{templateUrl:"templates/partials/nav.html",controller:"AuthController"},btnpanel:{templateUrl:"templates/partials/btnGym.html",controller:"HomeController"},form:{templateUrl:"templates/partials/foodform.html",controller:"AuthController"}}}),c.html5Mode(!0),d.interceptors.push(function(a,b){return{response:function(a){return a},responseError:function(c){return 401===c.status&&b.url("/login"),a.reject(c)}}})}]);var mysql=require("mysql"),express=require("express"),path=require("path"),favicon=require("serve-favicon"),logger=require("morgan"),bodyParser=require("body-parser"),pool=require("./public/javascripts/require.js"),easyPbkdf2=require("easy-pbkdf2")();const crypto=require("crypto");var secretKey=require("./secret"),sessionKey=require("./secret"),userFactory=require("./userFactory"),cookieParser=require("cookie-parser"),expressSession=require("express-session"),passport=require("passport"),LocalStrategy=require("passport-local").Strategy,routes=require("./routes/index"),app=express(),hour=36e5;app.set("views",path.join(__dirname,"public/templates")),app.set("view engine","ejs"),app.use(logger("dev")),app.use(bodyParser.json()),app.use(bodyParser.urlencoded({extended:!1})),app.use(cookieParser()),app.use(expressSession({secret:process.env.SESSION_SECRET||sessionKey,resave:!1,saveUninitialized:!1})),app.set(secretKey,secretKey),app.use(require("less-middleware")(path.join(__dirname,"public"))),app.use(express["static"](path.join(__dirname,"public"))),app.use(passport.initialize()),app.use(passport.session()),app.use(function(a,b,c){b.setHeader("Access-Control-Allow-Origin","http://localhost:3000"),b.setHeader("Access-Control-Allow-Methods","GET, POST"),b.setHeader("Access-Control-Allow-Headers","X-Requested-With,content-type, Authorization"),b.setHeader("Access-Control-Allow-Credentials","true"),c()}),passport.use("local-login",new LocalStrategy({usernameField:"email",passwordField:"password",passReqToCallback:!0},function(a,b,c,d){pool.query("SELECT * FROM `users` WHERE `email` = '"+b+"'",function(a,b){if(a)return d(a);if(!b.length)return d(null,!1),console.log("no error, and no user either!");if(!a){var e={salt:b[0].user_salt};const f=crypto.pbkdf2Sync(c,e.salt,1e5,512,"sha512");var g=f.toString("hex")}return b[0].password!=g?(d(null,!1),console.log("something is wrong with the buffers!")):b[0].user_salt!=e.salt?(d(null,!1),console.log("saltless")):(d(null,b[0]),console.log("You are successfully logged in!"))})})),passport.serializeUser(function(a,b){b(null,a.user_id)}),passport.deserializeUser(function(a,b){pool.query("select * from users where user_id = "+a,function(a,c){b(a,c[0])})});var ensureAuth=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(401)};app.post("/login",passport.authenticate("local-login",{session:!0,successRedirect:"/",failureRedirect:"/login"}),function(a,b){b.send({user:a.user})}),app.get("/loggedin",function(a,b){b.send(a.isAuthenticated())?a.user:"0"}),app.get("/account",ensureAuth,function(a,b){b.json(a.user)}),app.use("/",routes),app.use(function(a,b,c){var d=new Error("Not Found");d.status=404,c(d)}),"development"===app.get("env")&&app.use(function(a,b,c,d){c.status(a.status||500),c.render("error",{message:a.message,error:a})}),process.on("uncaughtException",function(a){console.log(a)}),module.exports=app;var express=require("express"),router=express.Router(),mysql=require("mysql"),pool=require("../public/javascripts/require"),expressSession=require("express-session"),passport=require("passport"),passportLocal=require("passport-local"),easyPbkdf2=require("easy-pbkdf2")(),jwt=require("jsonwebtoken"),secretKey=require("../secret");const crypto=require("crypto");router.get("/fridgeTest",function(a,b){pool.getConnection(function(a,c){a?console.log(a):c.query("select email from  users",function(a,c){a?console.log(a):b.json(c)})})}),router.get("/apiTest",function(a,b){b.json([{value:"efridge"},{value:"efridge"},{value:"efridge"},{value:"efridge"}])}),router.get("/efridge",function(a,b){pool.getConnection(function(a,c){a?console.log(a):(console.log("Well efridge is connected!"),c.query("select * from  efridge",function(a,c){b.json(c)}))})}),router.get("/logout",function(a,b){a.logout(),b.redirect("/login")}),router.get("*",function(a,b){b.render("index")}),router.post("/foodform",function(a,b){pool.getConnection(function(c,d){if(c)return void console.error(c);console.log("Successful Connection!");var e={food_name:a.body.food_name,brand:a.body.brand,serving_size:a.body.serving_size,total_calories:a.body.total_calories,fat_grams:a.body.fat_grams,carbohydrate_grams:a.body.carbohydrate_grams,protein_grams:a.body.protein_grams,total_grams:a.body.total_grams,user_id:a.user.user_id};d.query("insert into efridge set ?",e,function(a,c){a?console.error():b.redirect("/efridge")})})}),router.post("/register",function(a,b,c){var d=a.body.passWord,e=easyPbkdf2.generateSalt();const f=crypto.pbkdf2Sync(d,e,1e5,512,"sha512");var g=f.toString("hex"),h={email:a.body.userEmail,firstname:a.body.firstName,lastname:a.body.lastName,username:a.body.userName,password:g,user_salt:e,token:jwt.sign({username:this.username,email:this.email},secretKey)};connection.query("insert into users set ?",h,function(a,c){a?console.log("Did not work"):b.render("index",console.log("It worked!"))})}),module.exports=router;var mysql=require("mysql"),db_secret=require("./db_secret.js"),db=new db_secret,pool=mysql.createPool({connectionLimit:100,host:"localhost",user:db.user,password:db.password,database:"freetools"});module.exports=pool;var myApp=angular.module("myApp",["ui.router","ui.bootstrap","ngCookies"]);myApp.config(["$urlRouterProvider","$stateProvider","$locationProvider","$httpProvider",function(a,b,c,d){d.defaults.withCredentials=!0,b.state("home",{url:"/",views:{nav:{templateUrl:"templates/partials/nav.html",controller:"AuthController"},btnpanel:{templateUrl:"templates/partials/daily.html",controller:"HomeController"}}}).state("login",{url:"/login",views:{nav:{templateUrl:"templates/view2.html",controller:"AuthController"},btnpanel:{templateUrl:"templates/view1.html"},form:{templateUrl:"templates/partials/register.html",controller:"EgymController"}}}).state("egym",{url:"/egym",views:{nav:{templateUrl:"templates/partials/nav.html",controller:"AuthController"},btnpanel:{templateUrl:"templates/partials/btnGym.html",controller:"HomeController"},form:{templateUrl:"templates/partials/exercise.html",controller:"EgymController"}}}).state("efridge",{url:"/efridge",views:{nav:{templateUrl:"templates/partials/nav.html",controller:"AuthController"},btnpanel:{templateUrl:"templates/partials/btnFridge.html",controller:"HomeController"},form:{templateUrl:"templates/partials/foodtable.html",controller:"EfridgeController"}}}).state("account",{url:"/account",views:{nav:{templateUrl:"templates/partials/nav.html",controller:"AuthController"},btnpanel:{templateUrl:"templates/partials/btnGym.html",controller:"HomeController"},form:{templateUrl:"templates/partials/foodform.html",controller:"AuthController"}}}),c.html5Mode(!0),d.interceptors.push(function(a,b){return{response:function(a){return a},responseError:function(c){return 401===c.status&&b.url("/login"),a.reject(c)}}})}]);var mysql=require("mysql"),express=require("express"),path=require("path"),favicon=require("serve-favicon"),logger=require("morgan"),bodyParser=require("body-parser"),pool=require("./public/javascripts/require.js"),easyPbkdf2=require("easy-pbkdf2")();const crypto=require("crypto");var secretKey=require("./secret"),sessionKey=require("./secret"),userFactory=require("./userFactory"),cookieParser=require("cookie-parser"),expressSession=require("express-session"),passport=require("passport"),LocalStrategy=require("passport-local").Strategy,routes=require("./routes/index"),app=express(),hour=36e5;app.set("views",path.join(__dirname,"public/templates")),app.set("view engine","ejs"),app.use(logger("dev")),app.use(bodyParser.json()),app.use(bodyParser.urlencoded({extended:!1})),app.use(cookieParser()),app.use(expressSession({secret:process.env.SESSION_SECRET||sessionKey,resave:!1,saveUninitialized:!1})),app.set(secretKey,secretKey),app.use(require("less-middleware")(path.join(__dirname,"public"))),app.use(express["static"](path.join(__dirname,"public"))),app.use(passport.initialize()),app.use(passport.session()),app.use(function(a,b,c){b.setHeader("Access-Control-Allow-Origin","http://localhost:3000"),b.setHeader("Access-Control-Allow-Methods","GET, POST"),b.setHeader("Access-Control-Allow-Headers","X-Requested-With,content-type, Authorization"),b.setHeader("Access-Control-Allow-Credentials","true"),c()}),passport.use("local-login",new LocalStrategy({usernameField:"email",passwordField:"password",passReqToCallback:!0},function(a,b,c,d){pool.query("SELECT * FROM `users` WHERE `email` = '"+b+"'",function(a,b){if(a)return d(a);if(!b.length)return d(null,!1),console.log("no error, and no user either!");if(!a){var e={salt:b[0].user_salt};const f=crypto.pbkdf2Sync(c,e.salt,1e5,512,"sha512");var g=f.toString("hex")}return b[0].password!=g?(d(null,!1),console.log("something is wrong with the buffers!")):b[0].user_salt!=e.salt?(d(null,!1),console.log("saltless")):(d(null,b[0]),console.log("You are successfully logged in!"))})})),passport.serializeUser(function(a,b){b(null,a.user_id)}),passport.deserializeUser(function(a,b){pool.query("select * from users where user_id = "+a,function(a,c){b(a,c[0])})});var ensureAuth=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(401)};app.post("/login",passport.authenticate("local-login",{session:!0,successRedirect:"/",failureRedirect:"/login"}),function(a,b){b.send({user:a.user})}),app.get("/loggedin",function(a,b){b.send(a.isAuthenticated())?a.user:"0"}),app.get("/account",ensureAuth,function(a,b){b.json(a.user)}),app.use("/",routes),app.use(function(a,b,c){var d=new Error("Not Found");d.status=404,c(d)}),"development"===app.get("env")&&app.use(function(a,b,c,d){c.status(a.status||500),c.render("error",{message:a.message,error:a})}),process.on("uncaughtException",function(a){console.log(a)}),module.exports=app;var express=require("express"),router=express.Router(),mysql=require("mysql"),pool=require("../public/javascripts/require"),expressSession=require("express-session"),passport=require("passport"),passportLocal=require("passport-local"),easyPbkdf2=require("easy-pbkdf2")(),jwt=require("jsonwebtoken"),secretKey=require("../secret");const crypto=require("crypto");router.get("/fridgeTest",function(a,b){pool.getConnection(function(a,c){a?console.log(a):c.query("select email from  users",function(a,c){a?console.log(a):b.json(c)})})}),router.get("/apiTest",function(a,b){b.json([{value:"efridge"},{value:"efridge"},{value:"efridge"},{value:"efridge"}])}),router.get("/efridge",function(a,b){pool.getConnection(function(a,c){a?console.log(a):(console.log("Well efridge is connected!"),c.query("select * from  efridge",function(a,c){b.json(c)}))})}),router.get("/logout",function(a,b){a.logout(),b.redirect("/login")}),router.get("*",function(a,b){b.render("index")}),router.post("/foodform",function(a,b){pool.getConnection(function(c,d){if(c)return void console.error(c);console.log("Successful Connection!");var e={food_name:a.body.food_name,brand:a.body.brand,serving_size:a.body.serving_size,total_calories:a.body.total_calories,fat_grams:a.body.fat_grams,carbohydrate_grams:a.body.carbohydrate_grams,protein_grams:a.body.protein_grams,total_grams:a.body.total_grams,user_id:a.user.user_id};d.query("insert into efridge set ?",e,function(a,c){a?console.error():b.redirect("/efridge")})})}),router.post("/register",function(a,b,c){var d=a.body.passWord,e=easyPbkdf2.generateSalt();const f=crypto.pbkdf2Sync(d,e,1e5,512,"sha512");var g=f.toString("hex"),h={email:a.body.userEmail,firstname:a.body.firstName,lastname:a.body.lastName,username:a.body.userName,password:g,user_salt:e,token:jwt.sign({username:this.username,email:this.email},secretKey)};connection.query("insert into users set ?",h,function(a,c){a?console.log("Did not work"):b.render("index",console.log("It worked!"))})}),module.exports=router;var mysql=require("mysql"),db_secret=require("./db_secret.js"),db=new db_secret,pool=mysql.createPool({connectionLimit:100,host:"localhost",user:db.user,password:db.password,database:"freetools"});module.exports=pool;var myApp=angular.module("myApp",["ui.router","ui.bootstrap","ngCookies"]);myApp.config(["$urlRouterProvider","$stateProvider","$locationProvider","$httpProvider",function(a,b,c,d){d.defaults.withCredentials=!0,b.state("home",{url:"/",views:{nav:{templateUrl:"templates/partials/nav.html",controller:"AuthController"},btnpanel:{templateUrl:"templates/partials/daily.html",controller:"HomeController"}}}).state("login",{url:"/login",views:{nav:{templateUrl:"templates/view2.html",controller:"AuthController"},btnpanel:{templateUrl:"templates/view1.html"},form:{templateUrl:"templates/partials/register.html",controller:"EgymController"}}}).state("egym",{url:"/egym",views:{nav:{templateUrl:"templates/partials/nav.html",controller:"AuthController"},btnpanel:{templateUrl:"templates/partials/btnGym.html",controller:"HomeController"},form:{templateUrl:"templates/partials/exercise.html",controller:"EgymController"}}}).state("efridge",{url:"/efridge",views:{nav:{templateUrl:"templates/partials/nav.html",controller:"AuthController"},btnpanel:{templateUrl:"templates/partials/btnFridge.html",controller:"HomeController"},form:{templateUrl:"templates/partials/foodtable.html",controller:"EfridgeController"}}}).state("account",{url:"/account",views:{nav:{templateUrl:"templates/partials/nav.html",controller:"AuthController"},btnpanel:{templateUrl:"templates/partials/btnGym.html",controller:"HomeController"},form:{templateUrl:"templates/partials/foodform.html",controller:"AuthController"}}}),c.html5Mode(!0),d.interceptors.push(function(a,b){return{response:function(a){return a},responseError:function(c){return 401===c.status&&b.url("/login"),a.reject(c)}}})}]);var mysql=require("mysql"),express=require("express"),path=require("path"),favicon=require("serve-favicon"),logger=require("morgan"),bodyParser=require("body-parser"),pool=require("./public/javascripts/require.js"),easyPbkdf2=require("easy-pbkdf2")();const crypto=require("crypto");var secretKey=require("./secret"),sessionKey=require("./secret"),userFactory=require("./userFactory"),cookieParser=require("cookie-parser"),expressSession=require("express-session"),passport=require("passport"),LocalStrategy=require("passport-local").Strategy,routes=require("./routes/index"),app=express(),hour=36e5;app.set("views",path.join(__dirname,"public/templates")),app.set("view engine","ejs"),app.use(logger("dev")),app.use(bodyParser.json()),app.use(bodyParser.urlencoded({extended:!1})),app.use(cookieParser()),app.use(expressSession({secret:process.env.SESSION_SECRET||sessionKey,resave:!1,saveUninitialized:!1})),app.set(secretKey,secretKey),app.use(require("less-middleware")(path.join(__dirname,"public"))),app.use(express["static"](path.join(__dirname,"public"))),app.use(passport.initialize()),app.use(passport.session()),app.use(function(a,b,c){b.setHeader("Access-Control-Allow-Origin","http://localhost:3000"),b.setHeader("Access-Control-Allow-Methods","GET, POST"),b.setHeader("Access-Control-Allow-Headers","X-Requested-With,content-type, Authorization"),b.setHeader("Access-Control-Allow-Credentials","true"),c()}),passport.use("local-login",new LocalStrategy({usernameField:"email",passwordField:"password",passReqToCallback:!0},function(a,b,c,d){pool.query("SELECT * FROM `users` WHERE `email` = '"+b+"'",function(a,b){if(a)return d(a);if(!b.length)return d(null,!1),console.log("no error, and no user either!");if(!a){var e={salt:b[0].user_salt};const f=crypto.pbkdf2Sync(c,e.salt,1e5,512,"sha512");var g=f.toString("hex")}return b[0].password!=g?(d(null,!1),console.log("something is wrong with the buffers!")):b[0].user_salt!=e.salt?(d(null,!1),console.log("saltless")):(d(null,b[0]),console.log("You are successfully logged in!"))})})),passport.serializeUser(function(a,b){b(null,a.user_id)}),passport.deserializeUser(function(a,b){pool.query("select * from users where user_id = "+a,function(a,c){b(a,c[0])})});var ensureAuth=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(401)};app.post("/login",passport.authenticate("local-login",{session:!0,successRedirect:"/",failureRedirect:"/login"}),function(a,b){b.send({user:a.user})}),app.get("/loggedin",function(a,b){b.send(a.isAuthenticated())?a.user:"0"}),app.get("/account",ensureAuth,function(a,b){b.json(a.user)}),app.use("/",routes),app.use(function(a,b,c){var d=new Error("Not Found");d.status=404,c(d)}),"development"===app.get("env")&&app.use(function(a,b,c,d){c.status(a.status||500),c.render("error",{message:a.message,error:a})}),process.on("uncaughtException",function(a){console.log(a)}),module.exports=app;var express=require("express"),router=express.Router(),mysql=require("mysql"),pool=require("../public/javascripts/require"),expressSession=require("express-session"),passport=require("passport"),passportLocal=require("passport-local"),easyPbkdf2=require("easy-pbkdf2")(),jwt=require("jsonwebtoken"),secretKey=require("../secret");const crypto=require("crypto");router.get("/fridgeTest",function(a,b){pool.getConnection(function(a,c){a?console.log(a):c.query("select email from  users",function(a,c){a?console.log(a):b.json(c)})})}),router.get("/apiTest",function(a,b){b.json([{value:"efridge"},{value:"efridge"},{value:"efridge"},{value:"efridge"}])}),router.get("/efridge",function(a,b){pool.getConnection(function(a,c){a?console.log(a):(console.log("Well efridge is connected!"),c.query("select * from  efridge",function(a,c){b.json(c)}))})}),router.get("/logout",function(a,b){a.logout(),b.redirect("/login")}),router.get("*",function(a,b){b.render("index")}),router.post("/foodform",function(a,b){pool.getConnection(function(c,d){if(c)return void console.error(c);console.log("Successful Connection!");var e={food_name:a.body.food_name,brand:a.body.brand,serving_size:a.body.serving_size,total_calories:a.body.total_calories,fat_grams:a.body.fat_grams,carbohydrate_grams:a.body.carbohydrate_grams,protein_grams:a.body.protein_grams,total_grams:a.body.total_grams,user_id:a.user.user_id};d.query("insert into efridge set ?",e,function(a,c){a?console.error():b.redirect("/efridge")})})}),router.post("/register",function(a,b,c){var d=a.body.passWord,e=easyPbkdf2.generateSalt();const f=crypto.pbkdf2Sync(d,e,1e5,512,"sha512");var g=f.toString("hex"),h={email:a.body.userEmail,firstname:a.body.firstName,lastname:a.body.lastName,username:a.body.userName,password:g,user_salt:e,token:jwt.sign({username:this.username,email:this.email},secretKey)};connection.query("insert into users set ?",h,function(a,c){a?console.log("Did not work"):b.render("index",console.log("It worked!"))})}),module.exports=router;var mysql=require("mysql"),db_secret=require("./db_secret.js"),db=new db_secret,pool=mysql.createPool({connectionLimit:100,host:"localhost",user:db.user,password:db.password,database:"freetools"});module.exports=pool;var myApp=angular.module("myApp",["ui.router","ui.bootstrap","ngCookies"]);myApp.config(["$urlRouterProvider","$stateProvider","$locationProvider","$httpProvider",function(a,b,c,d){d.defaults.withCredentials=!0,b.state("home",{url:"/",views:{nav:{templateUrl:"templates/partials/nav.html",controller:"AuthController"},btnpanel:{templateUrl:"templates/partials/daily.html",controller:"HomeController"}}}).state("login",{url:"/login",views:{nav:{templateUrl:"templates/view2.html",controller:"AuthController"},btnpanel:{templateUrl:"templates/view1.html"},form:{templateUrl:"templates/partials/register.html",controller:"EgymController"}}}).state("egym",{url:"/egym",views:{nav:{templateUrl:"templates/partials/nav.html",controller:"AuthController"},btnpanel:{templateUrl:"templates/partials/btnGym.html",controller:"HomeController"},form:{templateUrl:"templates/partials/exercise.html",controller:"EgymController"}}}).state("efridge",{url:"/efridge",views:{nav:{templateUrl:"templates/partials/nav.html",controller:"AuthController"},btnpanel:{templateUrl:"templates/partials/btnFridge.html",controller:"HomeController"},form:{templateUrl:"templates/partials/foodtable.html",controller:"EfridgeController"}}}).state("account",{url:"/account",views:{nav:{templateUrl:"templates/partials/nav.html",controller:"AuthController"},btnpanel:{templateUrl:"templates/partials/btnGym.html",controller:"HomeController"},form:{templateUrl:"templates/partials/foodform.html",controller:"AuthController"}}}),c.html5Mode(!0),d.interceptors.push(function(a,b){return{response:function(a){return a},responseError:function(c){return 401===c.status&&b.url("/login"),a.reject(c)}}})}]);var mysql=require("mysql"),express=require("express"),path=require("path"),favicon=require("serve-favicon"),logger=require("morgan"),bodyParser=require("body-parser"),pool=require("./public/javascripts/require.js"),easyPbkdf2=require("easy-pbkdf2")();const crypto=require("crypto");var secretKey=require("./secret"),sessionKey=require("./secret"),userFactory=require("./userFactory"),cookieParser=require("cookie-parser"),expressSession=require("express-session"),passport=require("passport"),LocalStrategy=require("passport-local").Strategy,routes=require("./routes/index"),app=express(),hour=36e5;app.set("views",path.join(__dirname,"public/templates")),app.set("view engine","ejs"),app.use(logger("dev")),app.use(bodyParser.json()),app.use(bodyParser.urlencoded({extended:!1})),app.use(cookieParser()),app.use(expressSession({secret:process.env.SESSION_SECRET||sessionKey,resave:!1,saveUninitialized:!1})),app.set(secretKey,secretKey),app.use(require("less-middleware")(path.join(__dirname,"public"))),app.use(express["static"](path.join(__dirname,"public"))),app.use(passport.initialize()),app.use(passport.session()),app.use(function(a,b,c){b.setHeader("Access-Control-Allow-Origin","http://localhost:3000"),b.setHeader("Access-Control-Allow-Methods","GET, POST"),b.setHeader("Access-Control-Allow-Headers","X-Requested-With,content-type, Authorization"),b.setHeader("Access-Control-Allow-Credentials","true"),c()}),passport.use("local-login",new LocalStrategy({usernameField:"email",passwordField:"password",passReqToCallback:!0},function(a,b,c,d){pool.query("SELECT * FROM `users` WHERE `email` = '"+b+"'",function(a,b){if(a)return d(a);if(!b.length)return d(null,!1),console.log("no error, and no user either!");if(!a){var e={salt:b[0].user_salt};const f=crypto.pbkdf2Sync(c,e.salt,1e5,512,"sha512");var g=f.toString("hex")}return b[0].password!=g?(d(null,!1),console.log("something is wrong with the buffers!")):b[0].user_salt!=e.salt?(d(null,!1),console.log("saltless")):(d(null,b[0]),console.log("You are successfully logged in!"))})})),passport.serializeUser(function(a,b){b(null,a.user_id)}),passport.deserializeUser(function(a,b){pool.query("select * from users where user_id = "+a,function(a,c){b(a,c[0])})});var ensureAuth=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(401)};app.post("/login",passport.authenticate("local-login",{
session:!0,successRedirect:"/",failureRedirect:"/login"}),function(a,b){b.send({user:a.user})}),app.get("/loggedin",function(a,b){b.send(a.isAuthenticated())?a.user:"0"}),app.get("/account",ensureAuth,function(a,b){b.json(a.user)}),app.use("/",routes),app.use(function(a,b,c){var d=new Error("Not Found");d.status=404,c(d)}),"development"===app.get("env")&&app.use(function(a,b,c,d){c.status(a.status||500),c.render("error",{message:a.message,error:a})}),process.on("uncaughtException",function(a){console.log(a)}),module.exports=app;var express=require("express"),router=express.Router(),mysql=require("mysql"),pool=require("../public/javascripts/require"),expressSession=require("express-session"),passport=require("passport"),passportLocal=require("passport-local"),easyPbkdf2=require("easy-pbkdf2")(),jwt=require("jsonwebtoken"),secretKey=require("../secret");const crypto=require("crypto");router.get("/fridgeTest",function(a,b){pool.getConnection(function(a,c){a?console.log(a):c.query("select email from  users",function(a,c){a?console.log(a):b.json(c)})})}),router.get("/apiTest",function(a,b){b.json([{value:"efridge"},{value:"efridge"},{value:"efridge"},{value:"efridge"}])}),router.get("/efridge",function(a,b){pool.getConnection(function(a,c){a?console.log(a):(console.log("Well efridge is connected!"),c.query("select * from  efridge",function(a,c){b.json(c)}))})}),router.get("/logout",function(a,b){a.logout(),b.redirect("/login")}),router.get("*",function(a,b){b.render("index")}),router.post("/foodform",function(a,b){pool.getConnection(function(c,d){if(c)return void console.error(c);console.log("Successful Connection!");var e={food_name:a.body.food_name,brand:a.body.brand,serving_size:a.body.serving_size,total_calories:a.body.total_calories,fat_grams:a.body.fat_grams,carbohydrate_grams:a.body.carbohydrate_grams,protein_grams:a.body.protein_grams,total_grams:a.body.total_grams,user_id:a.user.user_id};d.query("insert into efridge set ?",e,function(a,c){a?console.error():b.redirect("/efridge")})})}),router.post("/register",function(a,b,c){var d=a.body.passWord,e=easyPbkdf2.generateSalt();const f=crypto.pbkdf2Sync(d,e,1e5,512,"sha512");var g=f.toString("hex"),h={email:a.body.userEmail,firstname:a.body.firstName,lastname:a.body.lastName,username:a.body.userName,password:g,user_salt:e,token:jwt.sign({username:this.username,email:this.email},secretKey)};connection.query("insert into users set ?",h,function(a,c){a?console.log("Did not work"):b.render("index",console.log("It worked!"))})}),module.exports=router;