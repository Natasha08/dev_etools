//setting up one nginx block with domain and node app
//use digital ocean tutorials to create a complete tutorial for yourself
//remember, this is not created within the app! or any app on the server.

//make directories for each domain
sudo mkdir -p /var/www/natashaosborne.com/html

//do this for each [example.com] as well
sudo chown -R $USER:$USER /var/www/natashaosborne.com/html

nano /var/www/natashaosborne.com/html/index.html

//for now, throw an html page with css and bootstrap cdn that points to my project...

sudo cp /etc/nginx/sites-available/default /etc/nginx/sites-available/natashaosborne.com

sudo nano /etc/nginx/sites-available/natashaosborne.com


/var/www/natashaosborne.com/html;

server_name natashaosborne.com www.natashaosborne.com;

//I think this makes the [example.com] that I plug in enabled

sudo ln -s /etc/nginx/sites-available/natashaosborne.com /etc/nginx/sites-enabled/


sudo rm /etc/nginx/sites-enabled/default


sudo nano /etc/nginx/nginx.conf

//uncomment this "server_names_hash_bucket_size 64;"

sudo service nginx restart

sudo nano /etc/nginx/sites-available/default

server {
    listen 80;

    server_name natashaosborne.com;

    location / {
        proxy_pass http://45.55.18.92:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
// } check where this one is in the file - for me it was waay at the bottom

sudo service nginx restart


forever stop ./bin/www
forever start ./bin/www




//This did not work, unsure if nginx supercedes this or what
nano /etc/init/mycolo.conf

start on filesystem and started networking
respawn
chdir /home/deploy/mycolo
env NODE_ENV=production #change this to staging if this is a staging server
env PORT=3000
exec /usr/local/bin/node bin/www


//generate ssl csr

openssl req -newkey rsa:2048 -keyout natashaosborne.key -out natashaosborne.csr


//bit of code to be added to appropriate .conf to enable ssl

listen   443 ssl;

ssl_certificate    /etc/ssl/your_domain_name.pem; (or bundle.crt)
ssl_certificate_key    /etc/ssl/your_domain_name.key;


//API key for sendgridmail
 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 

 sendgrid.send({
  to:       'natasha08@me.com',
  from:     'admin@natashaosborne.com',
  subject:  'Hello World',
  text:     'My first email through SendGrid.'
}, function(err, json) {
  if (err) { return console.error(err); }
  console.log(json);
});
